#!/usr/bin/perl -w

######################################################################################
#
### Arguments
#
######################################################################################
use File::Basename;

#### Get script inputs
my $infas = $ARGV[0];
my $incovs = $ARGV[1];
my $outfile = $ARGV[2];
chomp($outfile);


#### Prepare file names
$bsn = basename($infas);
$bsn =~ s/\..*$//;


#### Compute coverages
open IN, $incovs;
my %clustID;
while(<IN>){
  chomp();
  my @fields = split("\t", $_);
  my $ID = $fields[1];

  if($ID !~ /\*/){
    my $readID = $fields[9];

    my $tmp;
    if(my $tmp = $clustID{$ID}){
      $clustID{$ID} = $tmp + 1; #each hit counts for one read
      } else {
      $clustID{$ID} = $cov;
      }
    }
  }


#### Load fasta
open(FILE, "$infas");
local $/ = undef; #slurp, mode
my $input = <FILE>;
local $/ = "\n";
my @fields = split(/\>/, $input);
shift(@fields);
close(FILE);


## load fasta into hash. Note that %fasta contains your sequences. Can be reused elsewhere.
my %fasta;
my @accs;
my $ID = 0;
foreach my $input (@fields){
  my @tmp = split(/\n/, $input, 2);
  $_ = $tmp[1];
  s/\r|\n//g;
  $seq = uc $_; #turn everything in uppercase
  $fasta{$ID} = $seq;
  $ID++;
  }


## print sequences of interest into output
open(OUT, ">$outfile");
foreach my $ID (sort {$clustID{$b} <=> $clustID{$a}} keys %clustID) {
  my $cov = $clustID{$ID};
  my $seq = $fasta{$ID};
  print(OUT ">$bsn\_seq$ID\_cov=$cov\n$seq\n");
  }
close(OUT);

